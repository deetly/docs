Traceback (most recent call last):
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/nbclient/client.py", line 535, in async_execute
    await self.async_execute_cell(
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/B149899/.pyenv/versions/3.8.2/lib/python3.8/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df_links = pd.read_json('./data/team_links.json')
df_links['source'] = df_links['source'].astype(str)
df_links['target'] = df_links['target'].astype(str)

df_nodes = pd.read_json('./data/team_nodes.json')
df_nodes.columns=['id','name']
df_nodes['id'] = df_nodes['id'].astype(str)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-3-4dde50fe0695>[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mdf_links[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mread_json[0m[0;34m([0m[0;34m'./data/team_links.json'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0mdf_links[0m[0;34m[[0m[0;34m'source'[0m[0;34m][0m [0;34m=[0m [0mdf_links[0m[0;34m[[0m[0;34m'source'[0m[0;34m][0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mstr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0mdf_links[0m[0;34m[[0m[0;34m'target'[0m[0;34m][0m [0;34m=[0m [0mdf_links[0m[0;34m[[0m[0;34m'target'[0m[0;34m][0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mstr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0mdf_nodes[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mread_json[0m[0;34m([0m[0;34m'./data/team_nodes.json'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Caches/pypoetry/virtualenvs/pydeetly-kjE7aFHe-py3.7/lib/python3.7/site-packages/pandas/util/_decorators.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    212[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    213[0m                     [0mkwargs[0m[0;34m[[0m[0mnew_arg_name[0m[0;34m][0m [0;34m=[0m [0mnew_arg_value[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 214[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    215[0m [0;34m[0m[0m
[1;32m    216[0m         [0;32mreturn[0m [0mcast[0m[0;34m([0m[0mF[0m[0;34m,[0m [0mwrapper[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Caches/pypoetry/virtualenvs/pydeetly-kjE7aFHe-py3.7/lib/python3.7/site-packages/pandas/io/json/_json.py[0m in [0;36mread_json[0;34m(path_or_buf, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, numpy, precise_float, date_unit, encoding, lines, chunksize, compression)[0m
[1;32m    606[0m         [0;32mreturn[0m [0mjson_reader[0m[0;34m[0m[0;34m[0m[0m
[1;32m    607[0m [0;34m[0m[0m
[0;32m--> 608[0;31m     [0mresult[0m [0;34m=[0m [0mjson_reader[0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    609[0m     [0;32mif[0m [0mshould_close[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    610[0m         [0mfilepath_or_buffer[0m[0;34m.[0m[0mclose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Caches/pypoetry/virtualenvs/pydeetly-kjE7aFHe-py3.7/lib/python3.7/site-packages/pandas/io/json/_json.py[0m in [0;36mread[0;34m(self)[0m
[1;32m    729[0m             [0mobj[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_object_parser[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_combine_lines[0m[0;34m([0m[0mdata[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m"\n"[0m[0;34m)[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    730[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 731[0;31m             [0mobj[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_object_parser[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    732[0m         [0mself[0m[0;34m.[0m[0mclose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    733[0m         [0;32mreturn[0m [0mobj[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Caches/pypoetry/virtualenvs/pydeetly-kjE7aFHe-py3.7/lib/python3.7/site-packages/pandas/io/json/_json.py[0m in [0;36m_get_object_parser[0;34m(self, json)[0m
[1;32m    751[0m         [0mobj[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    752[0m         [0;32mif[0m [0mtyp[0m [0;34m==[0m [0;34m"frame"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 753[0;31m             [0mobj[0m [0;34m=[0m [0mFrameParser[0m[0;34m([0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m.[0m[0mparse[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    754[0m [0;34m[0m[0m
[1;32m    755[0m         [0;32mif[0m [0mtyp[0m [0;34m==[0m [0;34m"series"[0m [0;32mor[0m [0mobj[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Caches/pypoetry/virtualenvs/pydeetly-kjE7aFHe-py3.7/lib/python3.7/site-packages/pandas/io/json/_json.py[0m in [0;36mparse[0;34m(self)[0m
[1;32m    855[0m [0;34m[0m[0m
[1;32m    856[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 857[0;31m             [0mself[0m[0;34m.[0m[0m_parse_no_numpy[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    858[0m [0;34m[0m[0m
[1;32m    859[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mobj[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Library/Caches/pypoetry/virtualenvs/pydeetly-kjE7aFHe-py3.7/lib/python3.7/site-packages/pandas/io/json/_json.py[0m in [0;36m_parse_no_numpy[0;34m(self)[0m
[1;32m   1087[0m         [0;32mif[0m [0morient[0m [0;34m==[0m [0;34m"columns"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1088[0m             self.obj = DataFrame(
[0;32m-> 1089[0;31m                 [0mloads[0m[0;34m([0m[0mjson[0m[0;34m,[0m [0mprecise_float[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mprecise_float[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1090[0m             )
[1;32m   1091[0m         [0;32melif[0m [0morient[0m [0;34m==[0m [0;34m"split"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Expected object or value
ValueError: Expected object or value

